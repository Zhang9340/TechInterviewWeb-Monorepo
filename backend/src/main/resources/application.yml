spring:

  application:
    name: TechInterviewWeb-Backend
  # Default dev environment
  profiles:
    active: dev
  logging:
    level:
      com.zzy.techInterviewWeb.aop.LogInterceptor: DEBUG

  # Support for Swagger 3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  ai:
    openai:
      api-key: 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
    chat:
      options:
        model: gpt-4o-mini
        temperature: 0.7
  # Session configuration
  session:
    # TODO: Uncomment to enable distributed session (Redis must be configured first)
    # store-type: redis
    # 30-day expiration
    timeout: 2592000
  # Database configuration
  # TODO: Replace with your actual configuration
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/techInterviewWeb
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
  druid:
    # Configure initial size, minimum, and maximum number of connections
    initial-size: 10
    minIdle: 10
    max-active: 10
    # Configure the maximum wait time for obtaining a connection (in milliseconds)
    max-wait: 60000
    # Configure how often idle connections are checked for closure (in milliseconds)
    time-between-eviction-runs-millis: 2000
    # Configure the minimum lifespan of a connection in the pool (in milliseconds)
    min-evictable-idle-time-millis: 600000
    max-evictable-idle-time-millis: 900000
    # SQL query used to test if a connection is valid (default varies per database, this is for MySQL)
    validationQuery: select 1
    # When the application requests a connection from the pool and `testOnBorrow` is false, the pool checks if the connection is idle. If so, it validates the connection's availability.
    testWhileIdle: true
    # If true (default is false), when the application requests a connection, the pool will check if it is available
    testOnBorrow: false
    # If true (default is false), when the application returns a connection, the pool will check if it is still available
    testOnReturn: false
    # Whether to cache prepared statements (PSCache). This significantly improves performance for databases that support cursors, such as Oracle.
    poolPreparedStatements: true
    # To enable PSCache, set a value greater than 0. When greater than 0, `poolPreparedStatements` is automatically set to true.
    # In Druid, there is no issue with PSCache consuming excessive memory in Oracle.
    # You can set this to a larger value, such as 100.
    maxOpenPreparedStatements: 20
    # For connections within the `minIdle` count, if idle time exceeds `minEvictableIdleTimeMillis`, a keep-alive operation will be performed
    keepAlive: true
    # Spring monitoring: Uses AOP to record execution time and JDBC statistics for specified interfaces
    aop-patterns: "com.springboot.template.dao.*"

  # Redis configuration
  # TODO: Replace with your actual configuration, then uncomment
  redis:
    database: 1
    host: localhost
    port: 6379
    timeout: 5000
  #    password: 123456
  # Elasticsearch configuration
  # TODO: Replace with your actual configuration, then uncomment
  elasticsearch:
      uris: http://localhost:9200
      username: root
      password: 123456
  # File upload
  servlet:
    multipart:
      # Size limit
      max-file-size: 10MB
server:
  address: 0.0.0.0
  port: 8101
  servlet:
    context-path: /api
    # Cookie expiration (30 days)
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:/mapper/*.xml  # or use classpath:/com/zzy/techInterviewWeb/mapper/*.xml
  global-config:
    db-config:
      logic-delete-field: isDelete # Global logical deletion field in entity
      logic-delete-value: 1 # Logical deleted value (default is 1)
      logic-not-delete-value: 0 # Logical not deleted value (default is 0)
# WeChat-related configuration
wx:
  # WeChat Public Platform
  # TODO: Replace with your actual configuration
  mp:
    token: xxx
    aesKey: xxx
    appId: xxx
    secret: xxx
    config-storage:
      http-client-type: HttpClient
      key-prefix: wx
      redis:
        host: 127.0.0.1
        port: 6379
      type: Memory
  # WeChat Open Platform
  # TODO: Replace with your actual configuration
  open:
    appId: xxx
    appSecret: xxx
# Object Storage
# TODO: Replace with your actual configuration
cos:
  client:
    accessKey: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx
# API documentation configuration
knife4j:
  enable: true
  openapi:
    title: "API Documentation"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.zzy.techInterviewWeb.controller
